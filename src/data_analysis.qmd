---
title: "ds4owd-001: Course Data Analysis"
format: html
editor: visual
---

```{r}
#| label: load-packages
#| echo: false
#| include: false
library(tidyverse)
library(gridExtra)
```

```{r}
#| label: load-data
#| echo: false
#| include: false
source("data_collection.R")
```

```{r}
#| label: set-up
#| echo: false
#| include: false

low_purple <- "#ab84a8"
high_purple <- "#5b195b"
map_grey <- "grey80"

owd_palette <- c("#5b195b", "#9b2c60", "#ce525b",
                 "#f08453", "#ffbd54", "#f9f871")
```

The [first iteration of our free Data Science for Open WASH Data course](https://ds4owd-001.github.io/website/) took place during October 2023 and February 2024. Here are some interesting insights about this experience, because we believe in the great value of data, particularly when is shared openly.

Initially, `r nrow(registration)` people signed up for the course and since our aim is to empower WASH professionals to engage with tools and workflows for open data and open code, we were very pleased to have reached so many people from around the world!

```{r}
#| label: registration-data
#| echo: false
#| fig.width: 8
#| fig.height: 4

registration_country <- registration |> 
  group_by(country_ISO3) |> 
  summarise(n_resgitered = n()) |> 
  ungroup() |> 
  right_join(world, join_by(country_ISO3 == ISO3)) |> 
  filter(region != "Antarctica")

storage_df <- registration |> 
    mutate(storage_type =
           case_when(
             str_detect(data_storage, "Google")   ~ "Spreadsheets",
             str_detect(data_storage, "database") ~ "Databases",
             str_detect(data_storage, "CSV")      ~ "Machine readable files",
             str_detect(data_storage, "paper")    ~ "Physically",
             str_detect(data_storage, "know")     ~ "Unknown",
             TRUE                                 ~ "Other"
           )
         ) |> 
  group_by(storage_type) |> 
  summarise(n = n()) |> 
  ungroup()
```

```{r}
#| label: plot-countries
#| echo: false
#| fig.width: 8
#| fig.height: 4

plain <- theme(
  axis.text = element_blank(),
  axis.line = element_blank(),
  axis.ticks = element_blank(),
  panel.border = element_blank(),
  panel.grid = element_blank(),
  axis.title = element_blank(),
  panel.background = element_rect(fill = "white"),
  plot.margin =  margin(t = 0, r = 0, b = 0, l = 0, 
                        unit = "pt"),
  plot.title.position = "plot",
  plot.title = element_text(hjust = 0.5, 
                            size = 14, 
                            face = "bold")
)

countries_plot <- ggplot(data = registration_country, 
                         mapping = aes(x = long, 
                                       y = lat, 
                                       group = group)) + 
  coord_sf() +
  geom_polygon(aes(fill = n_resgitered)) +
  scale_fill_gradient(low = low_purple, 
                      high = low_purple, 
                      na.value = map_grey) +
  labs(title = "Number of registrations for ds4owd-001", 
       fill = "") +
  plain

countries_plot
```

What is the background and motivation that drove WASH professionals to register for a 10-week synchronous course on top of their other responsibilities? Let's find out.

```{r}
#| label: plot-organisation-storage
#| echo: false
#| fig-height: 6
#| fig-width: 8

org_plot <- ggplot(registration, 
                   aes(y = fct_infreq(organisation_type), 
                       fill = as_factor(organisation_type))) +
  geom_bar() +
  scale_fill_manual(values = owd_palette, guide = "none") +
  labs(title = "Organization type registered professionals work for", 
       x = "", 
       y = "") + 
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5,
                            size = 14, 
                            face = "bold"))

storage_plot <- ggplot(storage_df, 
                       aes(x = n,
                           y = fct_infreq(storage_type, w = n), 
                           fill = as_factor(storage_type))) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = owd_palette, guide = "none") +
  labs(title = "Current method for data storage", 
       x = "", 
       y = "") + 
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5,
                            size = 14, 
                            face = "bold"))

grid.arrange(org_plot, storage_plot, nrow = 2)
```

We believe, that within the WASH community there is a great amount of data that is being produced and, if made easily available, could help professionals across organizations further advance their projects. However, much of the valuable data that is produced stays inaccessible due to the difficulty that sharing entails. 

The existence of countless tools to store, manage and share data doesn't make this process easier for WASH professionals who may have other priorities. Additionally, even when interested in sharing the data, the lack of expertise in code-based tools and a standardized workflow makes the process slow and difficult.

```{r}
#| label: plot-programming-experience
#| echo: false
#| fig-height: 3
#| fig-width: 8

prog_plot <- ggplot(registration, 
                   aes(y = fct_infreq(programming_experience), 
                       fill = as_factor(programming_experience))) +
  geom_bar() +
  scale_fill_manual(values = owd_palette, guide = "none") +
  labs(title = "Experience in programming", 
       x = "", 
       y = "") + 
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5,
                            size = 14, 
                            face = "bold"))

prog_plot
```

If this resonates with your experience, we are thrilled to announce that we will be hosting a second iteration of Data Science for Open WASH data between September and December of this year! You can already go over the contents of the course and stay tuned for the registration [**here**](https://ds4owd-002.github.io/website/).

```{r}
#| label: participants-data
#| echo: false

participants <- course_participation |> 
  filter(guest == "Yes") |>
  mutate(name = if_else(is.na(name), user_email, name)) |> 
  group_by(name) |> 
  arrange(user_email) |> 
  summarise(modules_taken = n(),
            email = first(user_email)) |> 
  ungroup() |> 
  filter(modules_taken >= 4,
         # !is.na(email)
         ) 
```

```{r}
#| label: post-data
#| echo: false
#| include: false

post_ratings <- post_survey |> 
  transmute(r_competency = as_factor(rating_self_r_comp),
            git_competency = as_factor(rating_self_vc_comp),
            confidence = as_factor(conf_skill_app))

summary_post <- post_ratings |> 
  pivot_longer(cols = everything(),
               names_to = "Question", 
               values_to = "Answer") |> 
  mutate(Answer = if_else(Answer %in% c("1", "2"), "no", "yes")) |> 
  group_by(Question, Answer) |> 
  summarise(n = n()) |> 
  ungroup() |> 
  filter(Answer == "yes")
```

Although not everyone that signed up was able to take the course, in the first iteration we had `r nrow(participants)` participants complete at least half of the modules and we are specially proud of those who fulfilled the course up to the capstone project. You can get an [overview of the capstone projects](https://openwashdata.org/pages/academy/graduates/) completed by the graduates of our course. Moreover, some of them went as far as to publish their own data packages using the workflow provided by [`washr`](https://global-health-engineering.github.io/ghedatapublishing/). This is particularly invaluable as we strongly believe in the importance of the [FAIR principles for scientific data](https://www.go-fair.org/fair-principles/) and the recognition of research work that is not a scientific paper.

Finally, our greatest satisfaction is providing WASH professionals a skill set that they feel confident using beyond the course: `r (summary_post |> filter(Question == "r_competency") |> select(n) |> as_vector()) * 100 / nrow(post_survey)`\% of the participants that completed the final survey rated themselves as competent users of R after completing the course, `r (summary_post |> filter(Question == "git_competency") |> select(n) |> as_vector()) * 100 / nrow(post_survey)`\% of them manifested to feel competent using Git and GitHub, and `r (summary_post |> filter(Question == "confidence") |> select(n) |> as_vector()) * 100 / nrow(post_survey)`\% felt confident applying the skills learned in the course to real-world data science projets.


```{r}
#| label: plot-post
#| echo: false
#| fig-height: 6
#| fig-width: 8

r_skills_plot <- ggplot(post_ratings,
                        aes(y = r_competency,
                            fill = r_competency)) +
  geom_bar(aes(x = after_stat(count)  / sum(after_stat(count)) )) +
  scale_fill_manual(values = owd_palette, guide = "none") +
  scale_x_continuous(labels = scales::label_percent()) +
  labs(title = "Self-assessment of R skills", 
       x = "", 
       y = "") +
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5,
                            size = 14, 
                            face = "bold"))

confidence_plot <- ggplot(post_ratings, 
                          aes(y = confidence, 
                              fill = confidence)) +
  geom_bar(aes(x = after_stat(count)  / sum(after_stat(count)) )) +
  scale_fill_manual(values = owd_palette, guide = "none") +
  scale_x_continuous(labels = scales::label_percent()) +
  labs(title = "Confidence apllying learnt skills", 
       x = "", 
       y = "") +
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5,
                            size = 14, 
                            face = "bold"))

grid.arrange(r_skills_plot, confidence_plot, nrow = 2)
```


```{r}
#| label: extra
#| echo: false
#| eval: false

participants <- course_participation |> 
  filter(guest == "Yes") |>
  mutate(name = if_else(is.na(name), user_email, name)) |> 
  group_by(name) |> 
  arrange(user_email) |> 
  summarise(modules_taken = n(),
            email = first(user_email)) |> 
  ungroup() |> 
  filter(modules_taken >= 4,
         # !is.na(email)
         ) 

participants_data <- registration |> 
  set_names(registration_colnames) |> 
  select(-timestamp, 
         -orcid,,s
         -expectations,
         -code_of_conduct,
         -data_privacy) 
  
positcloud_time <- positcloud_usage |> 
  mutate(date = as_date(from)) |> 
  group_by(date) |> 
  summarise(total_time = sum(compute))

p <- ggplot(positcloud_time, aes(x = date, y = total_time)) +
  geom_line() + 
  xlab("")
p

test_df <- positcloud_usage |> 
  group_by(user_id) |>
  summarise(total = sum(compute)) |> 
  filter(total > 1) 
```