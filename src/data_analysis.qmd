---
title: "ds4owd-001: Course Data Analysis"
format: html
editor: visual
---

```{r}
#| label: load-packages
#| echo: false
#| include: false
library(tidyverse)
```

```{r}
#| label: load-data
#| echo: false
#| include: false
source("data_collection.R")
```

The first iteration of our free Data Science for Open WASH Data course took place during October 2023 and February 2024. Here are some interesting insights about this experience, because we love data.

Initially, `r nrow(registration)` people signed up for the course and since our aim is to empower WASH professionals to engage with tools and workflows for open data and open code, we were very pleased to have reached so many people from around the world!

```{r}
#| label: plot-countries
#| echo: false
#| fig.width: 8
#| fig.height: 4

registration_country <- registration |> 
  group_by(country_ISO3) |> 
  summarise(n_resgitered = n()) |> 
  ungroup() |> 
  right_join(world, join_by(country_ISO3 == ISO3)) |> 
  filter(region != "Antarctica")

plain <- theme(
  axis.text = element_blank(),
  axis.line = element_blank(),
  axis.ticks = element_blank(),
  panel.border = element_blank(),
  panel.grid = element_blank(),
  axis.title = element_blank(),
  panel.background = element_rect(fill = "white"),
  plot.margin =  margin(t = 0, r = 0, b = 0, l = 0, 
                        unit = "pt"),
  plot.title.position = "plot",
  plot.title = element_text(hjust = 0.5, 
                            size = 14, 
                            face = "bold")
)

countries_plot <- ggplot(data = registration_country, 
                         mapping = aes(x = long, 
                                       y = lat, 
                                       group = group)) + 
  coord_sf() +
  geom_polygon(aes(fill = n_resgitered)) +
  scale_fill_gradient(low = "#ab84a8", 
                      high = "#5b195b", 
                      na.value = "grey80") +
  labs(title = "Number of registrations for ds4owd-001", 
       fill = "") +
  plain

countries_plot
```

What is thebackground and motivation that drove WASH professionals to register for a 10-week synchronous course on top of their other responsibilities? Well, let's find out.

```{r}
#| label: plot-organisation
#| echo: false

owd_palette <- c("#5b195b", "#9b2c60", "#ce525b",
                 "#f08453", "#ffbd54", "#f9f871")

org_plot <- ggplot(registration, 
                   aes(y = fct_infreq(organisation_type), 
                       fill = as_factor(organisation_type))) +
  geom_bar() +
  scale_fill_manual(values = owd_palette, guide = "none") +
  labs(title = "Organization type registered professionals work for", 
       x = "", 
       y = "") + 
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5,
                            size = 14, 
                            face = "bold"))

org_plot
```

```{r}
#| label: plot-data-storage
#| echo: false

owd_palette <- c("#5b195b", "#9b2c60", "#ce525b",
                 "#f08453", "#ffbd54", "#f9f871")

storage_plot <- ggplot(registration, 
                       aes(y = fct_infreq(data_storage), 
                           fill = as_factor(data_storage))) +
  geom_bar() +
  scale_fill_manual(values = owd_palette, guide = "none") +
  labs(title = "Method for data storage", 
       x = "", 
       y = "") + 
  theme_minimal() +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5,
                            size = 14, 
                            face = "bold"))

storage_plot
```



```{r}
#| label: extra
#| echo: false
#| eval: false
participants <- course_participation |> 
  filter(guest == "Yes") |>
  mutate(name = if_else(is.na(name), user_email, name)) |> 
  group_by(name) |> 
  arrange(user_email) |> 
  summarise(modules_taken = n(),
            email = first(user_email)) |> 
  ungroup() |> 
  filter(modules_taken >= 4,
         # !is.na(email)
         ) 

participants_data <- registration |> 
  set_names(registration_colnames) |> 
  select(-timestamp, 
         -orcid,,s
         -expectations,
         -code_of_conduct,
         -data_privacy) 
  
positcloud_time <- positcloud_usage |> 
  mutate(date = as_date(from)) |> 
  group_by(date) |> 
  summarise(total_time = sum(compute))

p <- ggplot(positcloud_time, aes(x = date, y = total_time)) +
  geom_line() + 
  xlab("")
p

test_df <- positcloud_usage |> 
  group_by(user_id) |>
  summarise(total = sum(compute)) |> 
  filter(total > 1) 
```